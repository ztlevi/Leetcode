{"python":"from collections import deque\nclass Solution(object):\n    def findOrder(self, numCourses, prerequisites):\n        \"\"\"\n        :type numCourses: int\n        :type prerequisites: List[List[int]]\n        :rtype: List[int]\n        \"\"\"\n        edges = [[] for _ in range(numCourses)] # store edges[start]\n        cnt = [0 for _ in range(numCourses)]\n\n        for end, start in prerequisites:\n            edges[start].append(end)\n            cnt[end] += 1\n\n        ret = []\n        pq = deque([i for i in range(numCourses) if cnt[i]==0])\n\n        while pq:\n            node = pq.popleft()\n            ret.append(node)\n            for n in edges[node]:\n                cnt[n] -= 1\n                if cnt[n] == 0:\n                    pq.append(n)\n        if len(ret) == numCourses:\n            return ret\n        else:\n            return []"}