{"java":"public class Solution {\r\n    public int lengthLongestPath(String input) {\r\n        if(input == null) return 0;\r\n        LinkedList<Integer> stack = new LinkedList();\r\n        int longestLen = 0;\r\n        String[] l1 = input.split(\"\\n\");\r\n        stack.push(l1[0].length()+1);\r\n        if(l1[0].contains(\".\")) longestLen = l1[0].length();\r\n        int sum = stack.get(0);\r\n\r\n        // \\tsubdir1  \\t\\tfile1.ext \\t\\tsubsubdir1 \\tsubdir2\r\n        for(int i = 1; i < l1.length; i++){\r\n            String tab = \"\\t\";\r\n            int lev = l1[i].lastIndexOf(tab) + 1;\r\n            while(lev < stack.size()) {\r\n                sum -= stack.peek();\r\n                stack.pop();\r\n            }\r\n            stack.push(l1[i].length()-lev+1);\r\n            sum += stack.peek();\r\n            if(l1[i].contains(\".\"))\r\n                longestLen = (sum-1>longestLen) ? sum-1 : longestLen;\r\n        }\r\n        return longestLen;\r\n    }\r\n}"}