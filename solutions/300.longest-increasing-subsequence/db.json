{"java":"class Solution {\n    public int lengthOfLIS(int[] nums) {\n        if (nums.length == 0) {\n            return 0;\n        }\n        int len = nums.length;\n        int[] tails = new int[len];\n\n        int size = 0;\n        for (int n : nums) {\n            int s = 0, e = size;\n            while (s < e) {\n                int m = s + (e-s) / 2;\n                if (n > tails[m]) {\n                    s = m + 1;\n                } else if (n < tails[m])\n                    e = m;\n                else {\n                    e = m;\n                }\n            }\n            tails[s] = n;\n            size = Math.max(s + 1, size);\n        }\n        return size;\n    }\n}","python":"class Solution(object):\n    def lengthOfLIS(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        if not nums:\n            return 0\n        size = 0\n        tails = []\n        for n in nums:\n            i = bisect.bisect_left(tails, n)\n            if i >= len(tails):\n                tails.append(n)\n            else: \n                tails[i] = n\n            size = max(i + 1, size)\n        return size"}