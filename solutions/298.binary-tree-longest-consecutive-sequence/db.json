{"python":"# Definition for a binary tree node.\n# class TreeNode(object):\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution(object):\n    def longestConsecutive(self, root):\n        \"\"\"\n        :type root: TreeNode\n        :rtype: int\n        \"\"\"\n        if not root:\n            return 0\n        self.maximal = 1\n        def dfs(root, cnt):\n            if not root:\n                return\n            if root.left:\n                if root.left.val == root.val + 1:\n                    dfs(root.left, cnt+1)\n                    self.maximal = max(self.maximal, cnt+1)\n                else:\n                    dfs(root.left, 1)\n            if root.right:\n                if root.right.val == root.val + 1:\n                    dfs(root.right, cnt+1)\n                    self.maximal = max(self.maximal, cnt+1)\n                else:\n                    dfs(root.right, 1)\n        dfs(root, 1)\n        return self.maximal"}