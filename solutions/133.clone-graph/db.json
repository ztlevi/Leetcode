{"python":"# Definition for a undirected graph node\n# class UndirectedGraphNode:\n#     def __init__(self, x):\n#         self.label = x\n#         self.neighbors = []\n\nclass Solution:\n    # @param node, a undirected graph node\n    # @return a undirected graph node\n    def __init__(self):\n        self.dict = {}\n        \n    def cloneGraph(self, node):\n        if not node:\n            return None\n        if node.label in self.dict:\n            return self.dict[node.label]\n        root = UndirectedGraphNode(node.label)\n        self.dict[root.label] = root\n        for n in node.neighbors:\n            root.neighbors.append(self.cloneGraph(n))\n        return root\n"}