{"python":"import collections\nclass Solution(object):\n    def alienOrder(self, words):\n        chars = set(\"\".join(words))\n        degrees = {x:0 for x in chars}\n        graph = collections.defaultdict(list)\n        for pair in zip(words, words[1:]):\n            for x, y in zip(*pair):\n                if x != y:\n                    graph[x].append(y)\n                    degrees[y] += 1\n                    break\n\n        queue = list(filter(lambda x: degrees[x] == 0, degrees.keys()))\n        ret = \"\"\n        while queue:\n            x = queue.pop()\n            ret += x\n            for n in graph[x]:\n                degrees[n] -= 1\n                if degrees[n] == 0:\n                    queue.append(n)\n\n        return ret * (set(ret) == chars)\n\n# so = Solution()\n# so.alienOrder([\"wrt\",\"wrf\",\"er\",\"ett\",\"rftt\"])\n"}