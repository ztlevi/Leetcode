{"python":"# Definition for singly-linked list.\nclass ListNode(object):\n    def __init__(self, x):\n        self.val = x\n        self.next = None\n\nclass Solution(object):\n    def reverseKGroup(self, head, k):\n        \"\"\"\n        :type head: ListNode\n        :type k: int\n        :rtype: ListNode\n        \"\"\"\n        curr = head\n        count = 0\n        while curr != None and count != k:\n            curr = curr.next\n            count += 1\n\n        if count == k:\n            curr = self.reverseKGroup(curr, k)\n            for i in range(count):\n                tmp = head.next\n                head.next = curr\n                curr = head\n                head = tmp\n            head = curr\n        return head\n\nso = Solution()\nh = ListNode(1)\nh.next = ListNode(2)\nso.reverseKGroup(h, 2)\n"}