{"java":"/**\r\n * Definition for singly-linked list.\r\n * public class ListNode {\r\n *     int val;\r\n *     ListNode next;\r\n *     ListNode(int x) { val = x; }\r\n * }\r\n */\r\npublic class Solution {\r\n    public boolean isPalindrome(ListNode head) {\r\n        if (head == null) return true;\r\n        ListNode mid = findMiddle(head);\r\n        ListNode second = mid.next;\r\n        second = reverse(second);\r\n        while (second != null) {\r\n            if (head.val != second.val){\r\n                return false;\r\n            }else{\r\n                head = head.next;\r\n                second = second.next;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    public ListNode findMiddle(ListNode head) {\r\n        ListNode fast = head.next, slow = head;\r\n        while (fast != null && fast.next != null){\r\n            fast = fast.next.next;\r\n            slow = slow.next;\r\n        }\r\n        return slow;\r\n    }\r\n    \r\n    public ListNode reverse(ListNode head) {\r\n        ListNode ans = null;\r\n        while (head != null) {\r\n            ListNode temp = new ListNode(head.val);\r\n            head = head.next;\r\n            temp.next = ans;\r\n            ans = temp;\r\n        }\r\n        return ans;\r\n    }\r\n}"}