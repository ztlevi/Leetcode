{"java":"import java.util.*;\nclass Solution {\n    public String nextClosestTime(String time) {\n        Set<Character> digits = new HashSet();\n        digits.add(time.charAt(0));\n        digits.add(time.charAt(1));\n        digits.add(time.charAt(3));\n        digits.add(time.charAt(4));\n        int stime = Integer.parseInt(time.substring(0,2)) * 60 +\n                Integer.parseInt(time.substring(3,5));\n\n        int n = digits.size();\n        int pdiff = Integer.MAX_VALUE;\n        int ndiff = 0;\n        String pcan = \"\";\n        String ncan = \"\";\n\n        for (char i : digits){\n            for (char j : digits) {\n                for (char k : digits) {\n                    for (char l : digits) {\n                        String candidate = \"\"+i + \"\"+j + \":\" + \"\"+k + \"\"+l;\n                        if (isValidTime(candidate)) {\n                            int curtime = Integer.parseInt(candidate.substring(0,2)) * 60 +\n                                    Integer.parseInt(candidate.substring(3,5));\n                            int curDiff = curtime - stime;\n                            if (curDiff > 0) {\n                                if (pdiff > curDiff) {\n                                    pdiff = curDiff;\n                                    pcan = candidate;\n                                }\n                            } else if (curDiff < 0) {\n                                if (ndiff > curDiff) {\n                                    ndiff = curDiff;\n                                    ncan = candidate;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        if (pcan != \"\") return pcan;\n        else if (ncan != \"\") return ncan;\n        else return time;\n    }\n\n    public boolean isValidTime(String time) {\n        int hour = Integer.parseInt(time.substring(0,2));\n        int min = Integer.parseInt(time.substring(3,5));\n        if (hour >= 0 && hour < 24 && min >= 0 && min < 60) {\n            return true;\n        }\n        return false;\n    }\n\n}","python":"class Solution:\n    def nextClosestTime(self, time):\n        \"\"\"\n        :type time: str\n        :rtype: str\n        \"\"\"\n        tset = set(time)\n        t = list(map(int, time.split(':')))\n        sec = t[0]*60+t[1]\n        lessTime = ''\n        for i in range(24*60):\n            t = '{:02d}:{:02d}'.format(*divmod(i, 60))\n            if set(t) <= tset:\n                if not lessTime:\n                    lessTime = t\n                if i > sec:\n                    return t\n        return lessTime"}