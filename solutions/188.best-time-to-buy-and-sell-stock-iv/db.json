{"java":"public class Solution {\n    public int maxProfit(int k, int[] prices) {\n        if (prices.length == 0) return 0;\n        \n        if (k >= prices.length - 1)\n            return profit(prices); // when k is very large\n            \n        int[][] local = new int[prices.length][k+1];\n        int[][] global = new int[prices.length][k+1];\n        for (int i = 1; i < prices.length; i++) {\n            int diff = prices[i] - prices[i-1];\n            for (int j = 1; j <= k; j++) {\n                local[i][j] = Math.max(global[i-1][j-1]+Math.max(diff,0),\n                                       local[i-1][j] + diff);\n                global[i][j] = Math.max(global[i-1][j], local[i][j]);\n            }\n        }\n        return global[prices.length-1][k];\n    }\n    \n    public int profit(int[] prices) {\n        int profits = 0;\n        for (int i = 1; i < prices.length; i++) {\n            int diff = prices[i] - prices[i-1];\n            if (diff > 0)\n                profits += diff;\n        }\n        return profits;\n    }\n}\n"}