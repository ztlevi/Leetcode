{"java":"public class Solution {\r\n    public List<Integer> spiralOrder(int[][] matrix) {\r\n        int n = matrix.length;\r\n        int m = (n == 0) ? 0 : matrix[0].length;\r\n        List<Integer> ans = new LinkedList();\r\n        int rowStart = 0, columStart = 0, rowEnd = n-1, columEnd = m-1;\r\n        \r\n        while(rowStart <= rowEnd && columStart <= columEnd) {\r\n            int i = rowStart, j = columStart;\r\n            for(; j <= columEnd; j++) {\r\n                ans.add(matrix[i][j]);\r\n            }\r\n            rowStart++; j--;\r\n            \r\n            if(rowStart > rowEnd) break;\r\n            \r\n            for(i = rowStart; i <= rowEnd; i++) {\r\n                ans.add(matrix[i][j]);\r\n            }\r\n            columEnd--; i--;\r\n            \r\n            if(columStart > columEnd) break;\r\n            \r\n            for(j = columEnd; j >= columStart; j--) {\r\n                ans.add(matrix[i][j]);\r\n            }\r\n            rowEnd--; j++;\r\n            \r\n            if(rowStart > rowEnd) break;\r\n\r\n            for(i = rowEnd; i >= rowStart; i--) {\r\n                ans.add(matrix[i][j]);\r\n            }\r\n            columStart++; i++;\r\n        }\r\n        return ans;\r\n    }\r\n}"}