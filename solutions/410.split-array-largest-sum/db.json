{"java":"class Solution {\n    public int splitArray(int[] nums, int m) {\n        int len = nums.length;\n        Integer[][] dp = new Integer[m+1][len];\n        \n        return split(nums, 0, m, dp);\n        \n    }\n    \n    public int split(int[] nums, int start, int m, Integer[][] dp){\n        int len = nums.length;\n        if (start >= len || m < 1) return Integer.MAX_VALUE;\n        if (m == 1) {\n            int sum = 0;\n            for (int i = start; i < len; i++){\n                sum += nums[i];\n            }\n            return sum;\n        }\n        if (dp[m][start] != null) return dp[m][start];\n        int sum = 0, res = Integer.MAX_VALUE;\n        for (int i = start; i < len; i++) {\n            sum += nums[i];\n            int splitVal = Math.max(sum, split(nums, i+1, m-1, dp));\n            res = Math.min(res, splitVal);\n        }\n        dp[m][start] = res;\n        return res;\n    }\n}"}