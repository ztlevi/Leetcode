{"python":"class Solution(object):\n    def nearestPalindromic(self, S):\n        \"\"\"\n        :type n: str\n        :rtype: str\n        \"\"\"\n        K = len(S)\n        candidates = [str(10**k + d) for k in (K-1, K) for d in (-1, 1)]\n        prefix = S[:(K+1)/2]\n        P = int(prefix)\n        for start in map(str, (P-1, P, P+1)):\n            candidates.append(start + (start[:-1] if K%2 else start)[::-1])\n\n        def delta(x):\n            return abs(int(S) - int(x))\n\n        ans = None\n        for cand in candidates:\n            if cand != S and not cand.startswith('00'):\n                if (ans is None or delta(cand) < delta(ans) or\n                        delta(cand) == delta(ans) and int(cand) < int(ans)):\n                    ans = cand\n        return ans"}