{"python":"import collections\nclass Solution(object):\n    def coinChange(self, coins, amount):\n        \"\"\"\n        :type coins: List[int]\n        :type amount: int\n        :rtype: int\n        \"\"\"\n        dic = [0] * (amount+1) # rem : least coin num\n        def helper(rem):\n            if rem < 0:\n                return -1\n            if rem == 0:\n                return 0\n            remCnt = dic[rem]\n            if remCnt != 0: return remCnt\n            minCoin = float('inf')\n            for coin in coins:\n                cnt = helper(rem - coin)\n                if cnt >= 0 and cnt < minCoin:\n                    minCoin = cnt\n            # dic[rem - 1] = -1 if minCoin == float('inf') else minCoin\n            # return dic[rem-1]\n            if minCoin != float('inf'):\n                dic[rem] = minCoin + 1\n                return minCoin + 1\n            else:\n                dic[rem] = -1\n                return -1\n\n        ans = helper(amount)\n        return ans\n\n# so = Solution()\n# # a = so.coinChange([1, 2, 5], 11)\n# a = so.coinChange([186,419,83,408], 6249)\n# print(a)"}