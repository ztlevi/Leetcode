{"java":"public class Solution {\r\n    public boolean isValidSudoku(char[][] board) {\r\n        // block search\r\n        for(int i = 0; i < 3; i++) {\r\n            for(int j = 0; j < 3; j++) {\r\n                // get the init (X, Y) of each block\r\n                int initX = i*3, initY = j*3;\r\n                Set<Character> set = new HashSet();\r\n                \r\n                for(int x = 0; x < 3; x++) {\r\n                    for(int y = 0; y < 3; y++) {\r\n                        int X = initX+x, Y = initY+y;\r\n                        if(board[X][Y] != '.') {\r\n                            if(set.isEmpty()) {\r\n                                set.add(board[X][Y]);\r\n                            } else if(set.contains(board[X][Y])) {\r\n                                return false;\r\n                            }\r\n                            else set.add(board[X][Y]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        // line search\r\n        for(int i = 0; i < 9; i++) {\r\n            Set<Character> set = new HashSet();\r\n            for(int j = 0; j < 9; j++) {\r\n                if(board[i][j] != '.') {\r\n                    if(set.isEmpty()) {\r\n                        set.add(board[i][j]);\r\n                    } else if(set.contains(board[i][j])) {\r\n                        return false;\r\n                    }\r\n                    else set.add(board[i][j]);\r\n                }\r\n            }\r\n        }\r\n        \r\n        // colum search\r\n        for(int i = 0; i < 9; i++) {\r\n            Set<Character> set = new HashSet();\r\n            for(int j = 0; j < 9; j++) {\r\n                if(board[j][i] != '.') {\r\n                    if(set.isEmpty()) {\r\n                        set.add(board[j][i]);\r\n                    } else if(set.contains(board[j][i])) {\r\n                        return false;\r\n                    }\r\n                    else set.add(board[j][i]);\r\n                }\r\n            }\r\n        }\r\n        \r\n        return true;\r\n    }\r\n}"}