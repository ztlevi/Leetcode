{"java":"public class Solution {\n    public int islandPerimeter(int[][] grid) {\n        int n = grid.length;\n        if (n == 0) return 0;\n        int m = grid[0].length;\n        if (m == 0) return 0;\n\n        int perimeter = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                if (grid[i][j] == 1) {\n                    perimeter += checkSurround(grid, i, j);\n                }\n            }\n        }\n        return perimeter;\n    }\n    \n    public int checkSurround(int[][] grid, int i, int j) {\n        int n = grid.length;\n        int m = grid[0].length;\n        int[] x = {-1,1,0,0};\n        int[] y = {0,0,-1,1};\n        int count = 0;\n        for (int k = 0; k < 4; k++) {\n            int X = i + x[k];\n            int Y = j + y[k];\n            if (X >= 0 && X < n && Y >= 0 && Y < m && grid[X][Y] == 1) {\n                count++;\n            }\n        }\n        return 4-count;\n    }\n}"}