{"java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    int maxLen = 0;\n    public int longestUnivaluePath(TreeNode root) {\n        helper(root);\n        return maxLen;\n    }\n    public int helper(TreeNode node){\n        if (node == null) return 0;\n        int leftValue = 0, rightValue = 0;\n        if (node.left != null) {\n            leftValue = helper(node.left);\n            if (node.left.val == node.val)\n                leftValue++;\n            else\n                leftValue = 0;\n        }\n        \n        if (node.right != null) {\n            rightValue = helper(node.right);\n            if (node.right.val == node.val)\n                rightValue++;\n            else\n                rightValue = 0;\n        }\n        \n\n            maxLen = Math.max(maxLen, leftValue + rightValue);\n\n        \n        return Math.max(leftValue, rightValue);\n        \n    }\n}"}