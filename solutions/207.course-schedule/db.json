{"python":"from collections import deque\nclass Solution(object):\n    def canFinish(self, numCourses, prerequisites):\n        \"\"\"\n        :type numCourses: int\n        :type prerequisites: List[List[int]]\n        :rtype: bool\n        \"\"\"\n        map = {i: set() for i in range(numCourses)} # course number : prerequisites set\n        \n        for p in prerequisites:\n            course, prerequisite = p[0], p[1]\n            map[course].add(prerequisite)\n        \n        cnt = [len(map[i]) for i in range(numCourses)]\n        \n        pq = deque([i for i in range(numCourses) if cnt[i]==0]) # (num of set, course)\n        count = 0\n        while pq:\n            course = pq.popleft()\n            count += 1\n            for i in range(numCourses):\n                if course in map[i]:\n                    map[i].remove(course)\n                    cnt[i] -= 1\n                    if cnt[i] == 0:\n                        pq.append(i)\n        return True if count == numCourses else False\n            "}