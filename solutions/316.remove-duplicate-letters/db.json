{"java":"public class Solution {\n    public String removeDuplicateLetters(String s) {\n        //cbacdcbc\n        //c - 7， b - 6， a - 2， d - 4\n        //找0-2，3-4，5-6，7-7中最小的char\n        Map<Character, Integer> map = new HashMap();\n        \n        for (int i = 0; i < s.length(); i++) {\n            map.put(s.charAt(i), i);\n        }\n        \n        StringBuilder sb = new StringBuilder();\n        int start = 0, end = findSmallestIndex(map);\n\n        while (!map.isEmpty()) {\n            char curr = 'z' + 1;\n            int index = 0;\n            for (int i = start; i <= end; i++) {\n                char c = s.charAt(i);\n                if (c < curr && map.containsKey(c)) {\n                    curr = c;\n                    index = i;\n                }\n            }\n\n            sb.append(curr);\n            map.remove(curr);\n\n            start = index + 1;\n            end = findSmallestIndex(map);\n        }\n\n        return sb.toString();\n    }\n    \n    public int findSmallestIndex(Map<Character, Integer> map) {\n        int result = Integer.MAX_VALUE;\n        for (int num : map.values()) {\n            result = Math.min(result, num);\n        }\n        return result;\n    }\n}"}