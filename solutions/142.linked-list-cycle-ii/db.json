{"java":"/**\r\n * Definition for singly-linked list.\r\n * class ListNode {\r\n *     int val;\r\n *     ListNode next;\r\n *     ListNode(int x) {\r\n *         val = x;\r\n *         next = null;\r\n *     }\r\n * }\r\n */\r\npublic class Solution {\r\n    // http://www.cnblogs.com/hiddenfox/p/3408931.html\r\n    public ListNode detectCycle(ListNode head) {\r\n        if (head == null || head.next == null) return null;\r\n        ListNode fast = head;\r\n        ListNode slow = head;\r\n        \r\n        while (true) {\r\n            if (fast == null || fast.next == null) {\r\n                return null;\r\n            }\r\n            fast = fast.next.next;\r\n            slow = slow.next;\r\n            if (slow == fast) \r\n                break;\r\n        }\r\n        \r\n        // length from head to cycle start point equals the length from the meet point to start point\r\n        slow = head;\r\n        while (slow != fast) {\r\n            slow = slow.next;\r\n            fast = fast.next;\r\n        }\r\n        return slow;\r\n    }\r\n}"}