{"python":"# # Definition for a binary tree node.\n# class TreeNode(object):\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\n\nclass Solution(object):\n    def isValidBST(self, root):\n        \"\"\"\n        :type root: TreeNode\n        :rtype: bool\n        \"\"\"\n        if not root:\n            return True\n        else:\n            return self.dfs(root, float('-inf'), float('inf'))\n\n    def dfs(self, root, minimum, maximum):\n        if root == None:\n            return True\n        if root.val >= maximum or root.val <= minimum:\n            return False\n        else:\n            return self.dfs(root.left, minimum, root.val) and self.dfs(root.right, root.val, maximum)\n\n\n# root = TreeNode(2)\n# root.left = TreeNode(1)\n# root.right = TreeNode(3)\n# so = Solution()\n# so.isValidBST(root)\n"}